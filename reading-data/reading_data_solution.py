# -*- coding: utf-8 -*-
"""reading_data

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YKoHc9bkg7ghdlA_n00X1ckbQ_PSgBjO

# **mtcars.csv**
"""

import numpy as np
import pandas as pd

mtcars = pd.read_csv("/content/mtcars.csv")
mtcars
# (df1 != df2).sum().sum() ---> 0
# df1.equals(df2)

mtcars_new = mtcars.to_csv("/content/mtcars2.csv") # Choose a new name for the document inside the arugment

mtcars_new_read = pd.read_csv("/content/mtcars2.csv",index_col=0)
mtcars_new_read

# Checking mtcars
mtcars_new_read.equals(mtcars)

"""# **u.data**"""

u_data = pd.read_csv("/content/u.data", delimiter = '\t', header = None)
u_data

u_data_2 = u_data.to_csv("/content/u2.data",index = False, header = None) # Make sure to include index=False!

u_data_2_read = pd.read_csv("/content/u2.data", header = None)
u_data_2_read

# Checking u.data
u_data_2_read.equals(u_data)

"""# **beer.txt**"""

beer = pd.read_fwf("/content/beer.txt")
beer

beer_2 = beer.to_csv("/content/beer2.txt",index=False)

beer_2_read = pd.read_csv("/content/beer2.txt")
beer_2_read

# Checking beer.txt
beer_2_read.equals(beer)

"""# **u.item**"""

u_item = pd.read_csv("/content/u.item", delimiter = '|', encoding='ISO-8859-1', header=None)
u_item

u_item_new = u_item.to_csv("/content/u2.item", encoding='ISO-8859-1', index = False, header = None)

u_item_new_read = pd.read_csv("/content/u2.item", encoding='ISO-8859-1', header = None)
u_item_new_read

# Checking u.item
u_item_new_read.equals(u_item)

"""# **NHL 2015-16.xlsx**"""

nhl = pd.read_excel('/content/NHL 2015-16.xlsx')
nhl

nhl_2 = nhl.to_excel('/content/NHL_2 2015-16.xlsx', index = False)

nhl_2_read = pd.read_excel('/content/NHL_2 2015-16.xlsx')
nhl_2_read

nhl.equals(nhl_2_read)

(nhl != nhl_2_read).sum().sum()

# I'm having issues with .equals for u.data, u.item, and NHL 2015-16.xlsx

"""# **Function That Reads Without Exceptions**"""

# Is there a more efficient way of doing this? I wrote separate if conditions
# because I'm trying to take into account of differences in delimiters, headers,
# and encoding.
'''import pandas as pd
def read_a_file(file_name):
 if file_name == "/content/mtcars.csv":
    read_mtcars = pd.read_csv(file_name)
    return read_mtcars
 if file_name == "/content/u.data":
    read_u_data = pd.read_csv(file_name, delimiter = '\t', header = None)
    return read_u_data
 if file_name == "beer.txt":
    read_beer = pd.read_fwf(file_name)
    return read_beer
 if file_name == "/content/u.item":
    read_u_item = pd.read_csv(file_name, delimiter = '|', encoding='ISO-8859-1', header=None)
    return read_u_item
 if file_name == "/content/NHL_2 2015-16.xlsx":
   excel_file = pd.read_excel(file_name)
   return excel_file
 else:
  print("Double check the file name.")'''

import pandas as pd
def read_a_file(file_name):
  if ".xlsx" in file_name:
   excel_file = pd.read_excel(file_name)
   return excel_file
  if ".csv" in file_name:
    read_csv = pd.read_csv(file_name)
    return read_csv
  if ".txt" in file_name:
    read_txt = pd.read_fwf(file_name)
    return read_txt
  if ".item" in file_name:
    item_read = pd.read_csv(file_name, delimiter = '|', encoding='ISO-8859-1', header=None)
    return item_read
  if ".data" in file_name:
    data_read = pd.read_csv(file_name, delimiter = '\t', header = None)
    return data_read
  else:
    print("Double check the file.")

# Reading mtcars.csv with the function

read_a_file("/content/NHL_2 2015-16.xlsx")

# Reading u.data with the function
read_a_file("/content/u.data")

# Reading beer.txt with the function
read_a_file("/content/beer.txt")

# Reading u.item with the function
read_a_file("/content/u.item")

# Reading NHL 2015-16.xlsx with the function
read_a_file('/content/NHL_2 2015-16.xlsx')